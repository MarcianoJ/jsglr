JAVA PROFILE 1.0.1, created Tue Feb 10 14:33:50 2009

Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

@(#)jvm.hprof.txt	1.5 06/01/28

 Copyright (c) 2006 Sun Microsystems, Inc. All  Rights Reserved.

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=50000142, id = 200002, name="HPROF gc_finish watcher", group="system")
THREAD START (obj=50000142, id = 200001, name="main", group="main")
THREAD END (id = 200001)
TRACE 300269:
	java.lang.String.length(String.java:Unknown line)
	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
TRACE 300279:
	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
TRACE 300347:
	java.lang.StringCoding$StringEncoder.encode(StringCoding.java:Unknown line)
	java.lang.StringCoding.encode(StringCoding.java:Unknown line)
	java.lang.String.getBytes(String.java:Unknown line)
	java.io.UnixFileSystem.getBooleanAttributes(UnixFileSystem.java:Unknown line)
TRACE 300362:
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getResource(URLClassPath.java:Unknown line)
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
TRACE 300633:
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
TRACE 300715:
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	java.lang.Throwable.printStackTraceAsCause(Throwable.java:Unknown line)
TRACE 300019:
	java.lang.Thread.init(Thread.java:Unknown line)
	java.lang.Thread.<init>(Thread.java:Unknown line)
TRACE 300024:
	java.lang.String.hashCode(String.java:Unknown line)
	java.util.Hashtable.get(Hashtable.java:Unknown line)
	java.util.Properties.getProperty(Properties.java:Unknown line)
	java.lang.System.getProperty(System.java:Unknown line)
TRACE 300038:
	java.util.Arrays.copyOf(Arrays.java:Unknown line)
	java.lang.AbstractStringBuilder.expandCapacity(AbstractStringBuilder.java:Unknown line)
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:Unknown line)
	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
TRACE 300067:
	java.lang.ClassLoader.checkName(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClass0(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
TRACE 300071:
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.loadClassInternal(ClassLoader.java:Unknown line)
TRACE 300101:
	java.nio.Buffer.limit(Buffer.java:Unknown line)
	java.nio.Buffer.<init>(Buffer.java:Unknown line)
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
TRACE 300103:
	java.nio.Buffer.<init>(Buffer.java:Unknown line)
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
TRACE 300204:
	java.lang.StringBuilder.<init>(StringBuilder.java:Unknown line)
	java.io.ObjectStreamClass.getClassSignature(ObjectStreamClass.java:Unknown line)
	java.io.ObjectStreamField.<init>(ObjectStreamField.java:Unknown line)
	java.io.ObjectStreamField.<init>(ObjectStreamField.java:Unknown line)
TRACE 300225:
	java.net.URLStreamHandler.toExternalForm(URLStreamHandler.java:Unknown line)
	java.net.URL.toExternalForm(URL.java:Unknown line)
	java.net.URL.toString(URL.java:Unknown line)
	java.lang.String.valueOf(String.java:Unknown line)
TRACE 300271:
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:Unknown line)
	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
TRACE 300272:
	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
TRACE 300281:
	java.lang.String.charAt(String.java:Unknown line)
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
TRACE 300282:
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
TRACE 300296:
	java.lang.String.compareTo(String.java:Unknown line)
	java.io.UnixFileSystem.compare(UnixFileSystem.java:Unknown line)
	java.io.File.compareTo(File.java:Unknown line)
	java.io.File.equals(File.java:Unknown line)
TRACE 300305:
	java.lang.ThreadLocal.get(ThreadLocal.java:Unknown line)
	java.lang.StringCoding.deref(StringCoding.java:Unknown line)
	java.lang.StringCoding.encode(StringCoding.java:Unknown line)
	java.lang.String.getBytes(String.java:Unknown line)
TRACE 300361:
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getResource(URLClassPath.java:Unknown line)
TRACE 300374:
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getResource(URLClassPath.java:Unknown line)
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
	java.net.URLClassLoader.findClass(URLClassLoader.java:Unknown line)
TRACE 300387:
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
	java.net.URLClassLoader.findClass(URLClassLoader.java:Unknown line)
	sun.misc.Launcher$ExtClassLoader.findClass(Launcher.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
TRACE 300407:
	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
	sun.misc.URLClassPath$FileLoader.<init>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
TRACE 300410:
	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
	sun.misc.URLClassPath$FileLoader.<init>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
TRACE 300428:
	java.lang.String.length(String.java:Unknown line)
	java.io.UnixFileSystem.prefixLength(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.URLClassPath$FileLoader.<init>(URLClassPath.java:Unknown line)
TRACE 300511:
	java.lang.String.substring(String.java:Unknown line)
	java.net.URLStreamHandler.parseURL(URLStreamHandler.java:Unknown line)
	sun.net.www.protocol.file.Handler.parseURL(Handler.java:Unknown line)
	java.net.URL.<init>(URL.java:Unknown line)
TRACE 300515:
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:Unknown line)
	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
	java.net.URLStreamHandler.parseURL(URLStreamHandler.java:Unknown line)
	sun.net.www.protocol.file.Handler.parseURL(Handler.java:Unknown line)
TRACE 300616:
	java.lang.Throwable.toString(Throwable.java:Unknown line)
	java.lang.String.valueOf(String.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	java.lang.Throwable.printStackTrace(Throwable.java:Unknown line)
TRACE 300627:
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
TRACE 300628:
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
TRACE 300635:
	java.nio.charset.CoderResult.isOverflow(CoderResult.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
TRACE 300657:
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
TRACE 300659:
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
TRACE 300691:
	java.lang.AbstractStringBuilder.<init>(AbstractStringBuilder.java:Unknown line)
	java.lang.StringBuilder.<init>(StringBuilder.java:Unknown line)
	java.lang.Throwable.printStackTraceAsCause(Throwable.java:Unknown line)
	java.lang.Throwable.printStackTrace(Throwable.java:Unknown line)
TRACE 300729:
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	java.lang.Throwable.printStackTraceAsCause(Throwable.java:Unknown line)
	java.lang.Throwable.printStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.printStackTrace(Throwable.java:Unknown line)
TRACE 300731:
	java.lang.StringBuilder.<init>(StringBuilder.java:Unknown line)
	java.lang.StackTraceElement.toString(StackTraceElement.java:Unknown line)
	java.lang.String.valueOf(String.java:Unknown line)
	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
TRACE 300734:
	java.lang.AbstractStringBuilder.expandCapacity(AbstractStringBuilder.java:Unknown line)
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:Unknown line)
	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
	java.lang.StackTraceElement.toString(StackTraceElement.java:Unknown line)
TRACE 300757:
	java.util.AbstractList.iterator(AbstractList.java:Unknown line)
	java.lang.Shutdown.runHooks(Shutdown.java:Unknown line)
	java.lang.Shutdown.sequence(Shutdown.java:Unknown line)
	java.lang.Shutdown.shutdown(Shutdown.java:Unknown line)
TRACE 300776:
	java.util.IdentityHashMap$IdentityHashMapIterator.<init>(IdentityHashMap.java:Unknown line)
	java.util.IdentityHashMap$IdentityHashMapIterator.<init>(IdentityHashMap.java:Unknown line)
	java.util.IdentityHashMap$KeyIterator.<init>(IdentityHashMap.java:Unknown line)
	java.util.IdentityHashMap$KeyIterator.<init>(IdentityHashMap.java:Unknown line)
TRACE 300815:
	java.util.LinkedHashMap.newKeyIterator(LinkedHashMap.java:Unknown line)
	java.util.HashMap$KeySet.iterator(HashMap.java:Unknown line)
	java.util.HashSet.iterator(HashSet.java:Unknown line)
	java.util.AbstractCollection.toArray(AbstractCollection.java:Unknown line)
CPU TIME (ms) BEGIN (total = 50) Tue Feb 10 14:33:50 2009
rank   self  accum   count trace method
   1  8.00%  8.00%     239 300269 java.lang.String.length
   2  4.00% 12.00%       4 300279 sun.net.www.ParseUtil.decode
   3  4.00% 16.00%       5 300347 java.lang.StringCoding$StringEncoder.encode
   4  4.00% 20.00%       5 300362 sun.misc.URLClassPath.getLoader
   5  4.00% 24.00%      18 300633 sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
   6  4.00% 28.00%       8 300715 java.io.PrintStream.write
   7  2.00% 30.00%       3 300019 java.lang.Thread.init
   8  2.00% 32.00%      15 300024 java.lang.String.hashCode
   9  2.00% 34.00%      49 300038 java.util.Arrays.copyOf
  10  2.00% 36.00%       4 300067 java.lang.ClassLoader.checkName
  11  2.00% 38.00%       3 300071 sun.misc.Launcher$AppClassLoader.loadClass
  12  2.00% 40.00%      26 300101 java.nio.Buffer.limit
  13  2.00% 42.00%      26 300103 java.nio.Buffer.<init>
  14  2.00% 44.00%       3 300204 java.lang.StringBuilder.<init>
  15  2.00% 46.00%       4 300225 java.net.URLStreamHandler.toExternalForm
  16  2.00% 48.00%     235 300271 java.lang.AbstractStringBuilder.append
  17  2.00% 50.00%     235 300272 java.lang.StringBuilder.append
  18  2.00% 52.00%     235 300281 java.lang.String.charAt
  19  2.00% 54.00%       4 300282 java.io.UnixFileSystem.normalize
  20  2.00% 56.00%       4 300296 java.lang.String.compareTo
  21  2.00% 58.00%       6 300305 java.lang.ThreadLocal.get
  22  2.00% 60.00%       5 300361 sun.misc.URLClassPath$3.run
  23  2.00% 62.00%       7 300374 sun.misc.URLClassPath.getLoader
  24  2.00% 64.00%       1 300387 java.net.URLClassLoader$1.run
  25  2.00% 66.00%      53 300407 java.lang.StringBuilder.append
  26  2.00% 68.00%       1 300410 sun.net.www.ParseUtil.decode
  27  2.00% 70.00%       1 300428 java.lang.String.length
  28  2.00% 72.00%       5 300511 java.lang.String.substring
  29  2.00% 74.00%       6 300515 java.lang.AbstractStringBuilder.append
  30  2.00% 76.00%       1 300616 java.lang.Throwable.toString
  31  2.00% 78.00%      18 300627 java.nio.CharBuffer.<init>
  32  2.00% 80.00%      18 300628 java.nio.HeapCharBuffer.<init>
  33  2.00% 82.00%      18 300635 java.nio.charset.CoderResult.isOverflow
  34  2.00% 84.00%      18 300657 java.io.PrintStream.write
  35  2.00% 86.00%      18 300659 sun.nio.cs.StreamEncoder.writeBytes
  36  2.00% 88.00%       8 300691 java.lang.AbstractStringBuilder.<init>
  37  2.00% 90.00%       8 300729 java.io.PrintStream.println
  38  2.00% 92.00%      13 300731 java.lang.StringBuilder.<init>
  39  2.00% 94.00%      19 300734 java.lang.AbstractStringBuilder.expandCapacity
  40  2.00% 96.00%       1 300757 java.util.AbstractList.iterator
  41  2.00% 98.00%       2 300776 java.util.IdentityHashMap$IdentityHashMapIterator.<init>
  42  2.00% 100.00%       1 300815 java.util.LinkedHashMap.newKeyIterator
CPU TIME (ms) END
